from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
import os

from first_aid.Reanimation import ReanimationAid
from first_aid.injury import InjuryAid
from first_aid.bleeding import BleedingAid
from first_aid.head_and_back import Head_and_back
from first_aid.burns import Burns
from first_aid.breath import Breath
from first_aid.heat_stroke import Heat_stroke
from first_aid.poisoning import Poisoning
from first_aid.bites import Bites


from typing import TYPE_CHECKING
if TYPE_CHECKING:
    from main import MyBot

class FirstAid:
    def __init__(self, my_bot: "MyBot"):
        self.bot = my_bot
        self.app = my_bot.app
        self.reanimation_aid = ReanimationAid(my_bot, self)
        self.injury_aid = InjuryAid(my_bot, self)
        self.bleeding_aid = BleedingAid(my_bot, self)
        self.head_and_back = Head_and_back(my_bot, self)
        self.burns = Burns(my_bot, self)
        self.breath = Breath(my_bot, self)
        self.heat_stroke = Heat_stroke(my_bot, self)
        self.poisoning = Poisoning(my_bot, self)
        self.bites = Bites(my_bot, self)
        self.register_handlers()  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    
    
    def register_handlers(self):
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω—é –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏ –∏ –∫–Ω–æ–ø–æ–∫
        #self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CommandHandler("first_aid", self.first_aid_menu))
        self.app.add_handler(CallbackQueryHandler(self.reanimation_aid.provide_reanimation_aid_info, pattern='^aid_reanimation$'))
        self.app.add_handler(CallbackQueryHandler(self.injury_aid.provide_injury_aid_info, pattern='^aid_injury$'))
        self.app.add_handler(CallbackQueryHandler(self.bleeding_aid.main_provide_bleeding_aid_info, pattern='^aid_bleeding$'))
        self.app.add_handler(CallbackQueryHandler(self.head_and_back.main_head_and_back_aid_info, pattern='^head_and_back$'))
        self.app.add_handler(CallbackQueryHandler(self.burns.main_burns_aid_info, pattern='^burns$'))
        self.app.add_handler(CallbackQueryHandler(self.breath.main_breath_aid_info, pattern='^breath$'))
        self.app.add_handler(CallbackQueryHandler(self.heat_stroke.main_heat_stroke_aid_info, pattern='^heat_stroke$'))
        self.app.add_handler(CallbackQueryHandler(self.poisoning.main_poisoning_aid_info, pattern='^poisoning$'))
        self.app.add_handler(CallbackQueryHandler(self.bites.main_bites_aid_info, pattern='^bites$'))
        self.app.add_handler(CallbackQueryHandler(self.first_aid_menu, pattern='^back_to_menu$'))
        self.app.add_handler(CallbackQueryHandler(self.bot.start, pattern='^restart_bot$'))



    async def first_aid_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        chat_id = update.effective_chat.id
        query = update.callback_query
        if query:
            await query.answer()

        await self.bot.delete_previous_messages(chat_id, context)
        # –ú–µ–Ω—é –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("–†–µ–∞–Ω–∏–º–∞—Ü–∏—è (–°–õ–†)", callback_data='aid_reanimation')],
            [InlineKeyboardButton("–†–∞–Ω–µ–Ω–∏—è/–∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ/–ø–æ—Ä–µ–∑—ã", callback_data='aid_bleeding')],
            [InlineKeyboardButton("–¢—Ä–∞–≤–º—ã (–ø–µ—Ä–µ–ª–æ–º—ã/–≤—ã–≤–∏—Ö–∏/—Ä–∞—Å—Ç—è–∂–µ–Ω–∏—è)", callback_data='aid_injury')],
            [InlineKeyboardButton("–û–∂–æ–≥–∏/—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –æ–∂–æ–≥–∏", callback_data='burns')],
            [InlineKeyboardButton("–¢—Ä–∞–≤–º—ã –≥–æ–ª–æ–≤—ã –∏ –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–∞", callback_data='head_and_back')],
            [InlineKeyboardButton("–ù–µ–ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π", callback_data='breath')],
            [InlineKeyboardButton("–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å –ø—Ä–∏ —Ç–µ–ø–ª–æ–≤–æ–º —É–¥–∞—Ä–µ", callback_data='heat_stroke')],
            [InlineKeyboardButton("–û—Ç—Ä–∞–≤–ª–µ–Ω–∏—è", callback_data='poisoning')],
            [InlineKeyboardButton("–£–∫—É—Å—ã/—É–∫—É—Å—ã –∑–º–µ–∏", callback_data='bites')],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='restart_bot')],

        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        welcome_message = (
            "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–æ—Ç –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ü–æ–º–æ—â–∏!* üöë\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–∫–∞–∑–∞–Ω–∏—é –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö. "
            "–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –æ—Ç —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –º–æ–∂–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –∂–∏–∑–Ω—å —á–µ–ª–æ–≤–µ–∫–∞. –í–æ—Ç —á—Ç–æ —É–º–µ–µ—Ç –Ω–∞—à –±–æ—Ç:\n\n"
            
            "üìã *–ú–µ–Ω—é –ø–æ–º–æ—â–∏*:\n\n"
            "- –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–∏ –æ–∂–æ–≥–∞—Ö, –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è—Ö, —Ç—Ä–∞–≤–º–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.\n"
            "- –ü–æ–ª—É—á–∏—Ç–µ –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Å–µ—Ä–¥–µ—á–Ω–æ-–ª–µ–≥–æ—á–Ω–æ–π –ø–æ–º–æ—â–∏.\n\n"
            
            "üìû *–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞*:\n\n"
            "- –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é —Å–ª—É–∂–±—É –ø–æ –Ω–æ–º–µ—Ä—É: *112*.\n"
            "- –í—ã–∑–≤–∞—Ç—å —Å–∫–æ—Ä—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –ø–æ–º–æ—â—å –ø–æ –Ω–æ–º–µ—Ä—É: *103*.\n\n"
            
            "‚ùó *–í–∞–∂–Ω–æ!*\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ø–∞—Å–∞—Ç–µ–ª–µ–π "
            "–∏–ª–∏ —Å–∫–æ—Ä—É—é –ø–æ–º–æ—â—å –ø–æ –Ω–æ–º–µ—Ä—É *112*.\n\n"

            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∑—è—Ç–∞ —Å [—Å–∞–π—Ç–∞ –ú–ß–° –†–æ—Å—Å–∏–∏](https://mchs.gov.ru/deyatelnost/bezopasnost-grazhdan#safety-11)\n\n"
            
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
        )

        message = await context.bot.send_message(
            chat_id=chat_id,
            text=welcome_message,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        self.bot.user_message_ids.setdefault(chat_id, []).append(message.message_id)

